{
    "0": {
        "rawQuestion": "#### Q1. If you want to import just the Component from the React library, what syntax do you use?\n\n",
        "selection": [
            {
                "rawOption": " `import React.Component from 'react'`\n"
            },
            {
                "rawOption": " `import [ Component ] from 'react'`\n"
            },
            {
                "rawOption": " `import Component from 'react'`\n"
            },
            {
                "rawOption": " `import { Component } from 'react'`"
            }
        ],
        "answers": [
            3
        ]
    },
    "1": {
        "rawQuestion": "#### Q2. If a function component should always render the same way given the same props, what is a simple performance optimization available for it?\n\n",
        "selection": [
            {
                "rawOption": " Wrap it in the `React.memo` higher-order component.\n"
            },
            {
                "rawOption": " Implement the `useReducer` Hook.\n"
            },
            {
                "rawOption": " Implement the `useMemo` Hook.\n"
            },
            {
                "rawOption": " Implement the `shouldComponentUpdate` lifecycle method."
            }
        ],
        "answers": [
            0
        ]
    },
    "2": {
        "rawQuestion": "#### Q3. How do you fix the syntax error that results from running this code?\n\n```javascript\nconst person =(firstName, lastName) =>\n{\n  first: firstName,\n  last: lastName\n}\nconsole.log(person(\"Jill\", \"Wilson\"))\n```\n\n",
        "selection": [
            {
                "rawOption": " Wrap the object in parentheses.\n"
            },
            {
                "rawOption": " Call the function from another file.\n"
            },
            {
                "rawOption": " Add a return statement before the first curly brace.\n"
            },
            {
                "rawOption": " Replace the object with an array."
            }
        ],
        "answers": [
            0
        ]
    },
    "3": {
        "rawQuestion": "#### Q4. If you see the following import in a file, what is being used for state management in the component?\n\n`import React, {useState} from 'react';`\n\n",
        "selection": [
            {
                "rawOption": " React Hooks\n"
            },
            {
                "rawOption": " stateful components\n"
            },
            {
                "rawOption": " math\n"
            },
            {
                "rawOption": " class components"
            }
        ],
        "answers": [
            0
        ]
    },
    "4": {
        "rawQuestion": "#### Q5. Using object literal enhancement, you can put values back into an object. When you log person to the console, what is the output?\n\n```javascript\nconst name = 'Rachel';\nconst age = 31;\nconst person = { name, age };\nconsole.log(person);\n```\n\n",
        "selection": [
            {
                "rawOption": " `{{name: \"Rachel\", age: 31}}`\n"
            },
            {
                "rawOption": " `{name: \"Rachel\", age: 31}`\n"
            },
            {
                "rawOption": " `{person: \"Rachel\", person: 31}}`\n"
            },
            {
                "rawOption": " `{person: {name: \"Rachel\", age: 31}}`"
            }
        ],
        "answers": [
            1
        ]
    },
    "5": {
        "rawQuestion": "#### Q6. What is the testing library most often associated with React?\n\n",
        "selection": [
            {
                "rawOption": " Mocha\n"
            },
            {
                "rawOption": " Chai\n"
            },
            {
                "rawOption": " Sinon\n"
            },
            {
                "rawOption": " Jest"
            }
        ],
        "answers": [
            3
        ]
    },
    "6": {
        "rawQuestion": "#### Q7. To get the first item from the array (\"cooking\") using array destructuring, how do you adjust this line?\n\n```javascript\nconst topics = ['cooking', 'art', 'history'];\n```\n\n",
        "selection": [
            {
                "rawOption": " `const first = [\"cooking\", \"art\", \"history\"]`\n"
            },
            {
                "rawOption": " `const [] = [\"cooking\", \"art\", \"history\"]`\n"
            },
            {
                "rawOption": " `const [, first][\"cooking\", \"art\", \"history\"]`\n"
            },
            {
                "rawOption": " `const [first] = [\"cooking\", \"art\", \"history\"]`"
            }
        ],
        "answers": [
            3
        ]
    },
    "7": {
        "rawQuestion": "#### Q8. How do you handle passing through the component tree without having to pass props down manually at every level?\n\n",
        "selection": [
            {
                "rawOption": " React Send\n"
            },
            {
                "rawOption": " React Pinpoint\n"
            },
            {
                "rawOption": " React Router\n"
            },
            {
                "rawOption": " React Context"
            }
        ],
        "answers": [
            3
        ]
    },
    "8": {
        "rawQuestion": "#### Q9. What should the console read when the following code is run?\n\n```javascript\nconst [, , animal] = ['Horse', 'Mouse', 'Cat'];\nconsole.log(animal);\n```\n\n",
        "selection": [
            {
                "rawOption": " Horse\n"
            },
            {
                "rawOption": " Cat\n"
            },
            {
                "rawOption": " Mouse\n"
            },
            {
                "rawOption": " undefined"
            }
        ],
        "answers": [
            1
        ]
    },
    "9": {
        "rawQuestion": "#### Q10. What is the name of the tool used to take JSX and turn it into createElement calls?\n\n",
        "selection": [
            {
                "rawOption": " JSX Editor\n"
            },
            {
                "rawOption": " ReactDOM\n"
            },
            {
                "rawOption": " Browser Buddy\n"
            },
            {
                "rawOption": " Babel"
            }
        ],
        "answers": [
            3
        ]
    },
    "10": {
        "rawQuestion": "#### Q11. Why might you use useReducer over useState in a React component?\n\n",
        "selection": [
            {
                "rawOption": " when you want to replace Redux\n"
            },
            {
                "rawOption": " when you need to manage more complex state in an app\n"
            },
            {
                "rawOption": " when you want to improve performance\n"
            },
            {
                "rawOption": " when you want to break your production app"
            }
        ],
        "answers": [
            1
        ]
    },
    "11": {
        "rawQuestion": "#### Q12. Which props from the props object is available to the component with the following syntax?\n\n```javascript\n<Message {...props} />\n```\n\n",
        "selection": [
            {
                "rawOption": " any that have not changed\n"
            },
            {
                "rawOption": " all of them\n"
            },
            {
                "rawOption": " child props\n"
            },
            {
                "rawOption": " any that have changed"
            }
        ],
        "answers": [
            1
        ]
    },
    "12": {
        "rawQuestion": "#### Q13. Consider the following code from React Router. What do you call :id in the path prop?\n\n```javascript\n<Route path=\"/:id\" />\n```\n\n",
        "selection": [
            {
                "rawOption": " This is a route modal\n"
            },
            {
                "rawOption": " This is a route parameter\n"
            },
            {
                "rawOption": " This is a route splitter\n"
            },
            {
                "rawOption": " This is a route link"
            }
        ],
        "answers": [
            1
        ]
    },
    "13": {
        "rawQuestion": "#### Q14. If you created a component called Dish and rendered it to the DOM, what type of element would be rendered?\n\n```javascript\nfunction Dish() {\n  return <h1>Mac and Cheese</h1>;\n}\n\nReactDOM.render(<Dish />, document.getElementById('root'));\n```\n\n",
        "selection": [
            {
                "rawOption": " `div`\n"
            },
            {
                "rawOption": " section\n"
            },
            {
                "rawOption": " component\n"
            },
            {
                "rawOption": " `h1`"
            }
        ],
        "answers": [
            3
        ]
    },
    "14": {
        "rawQuestion": "#### Q15. What does this React element look like given the following function? (Alternative: Given the following code, what does this React element look like?)\n\n```javascript\nReact.createElement('h1', null, \"What's happening?\");\n```\n\n",
        "selection": [
            {
                "rawOption": " `<h1 props={null}>What's happening?</h1>`\n"
            },
            {
                "rawOption": " `<h1>What's happening?</h1>`\n"
            },
            {
                "rawOption": " `<h1 id=\"component\">What's happening?</h1>`\n"
            },
            {
                "rawOption": " `<h1 id=\"element\">What's happening?</h1>`"
            }
        ],
        "answers": [
            1
        ]
    },
    "15": {
        "rawQuestion": "#### Q16. What property do you need to add to the Suspense component in order to display a spinner or loading state?\n\n```javascript\nfunction MyComponent() {\n  return (\n    <Suspense>\n      <div>\n        <Message />\n      </div>\n    </Suspense>\n  );\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " lazy\n"
            },
            {
                "rawOption": " loading\n"
            },
            {
                "rawOption": " fallback\n"
            },
            {
                "rawOption": " spinner"
            }
        ],
        "answers": [
            2
        ]
    },
    "16": {
        "rawQuestion": "#### Q17. What do you call the message wrapped in curly braces below?\n\n```javascript\nconst message = 'Hi there';\nconst element = <p>{message}</p>;\n```\n\n",
        "selection": [
            {
                "rawOption": " a JS function\n"
            },
            {
                "rawOption": " a JS element\n"
            },
            {
                "rawOption": " a JS expression\n"
            },
            {
                "rawOption": " a JSX wrapper"
            }
        ],
        "answers": [
            2
        ]
    },
    "17": {
        "rawQuestion": "#### Q18. What can you use to handle code splitting?\n\n",
        "selection": [
            {
                "rawOption": " `React.memo`\n"
            },
            {
                "rawOption": " `React.split`\n"
            },
            {
                "rawOption": " `React.lazy`\n"
            },
            {
                "rawOption": " `React.fallback`"
            }
        ],
        "answers": [
            2
        ]
    },
    "18": {
        "rawQuestion": "#### Q19. When do you use `useLayoutEffect`?\n\n",
        "selection": [
            {
                "rawOption": " to optimize for all devices\n"
            },
            {
                "rawOption": " to complete the update\n"
            },
            {
                "rawOption": " to change the layout of the screen\n"
            },
            {
                "rawOption": " when you need the browser to paint before the effect runs"
            }
        ],
        "answers": [
            3
        ]
    },
    "19": {
        "rawQuestion": "#### Q20. What is the difference between the click behaviors of these two buttons (assuming that this.handleClick is bound correctly)?\n\n```javascript\nA. <button onClick={this.handleClick}>Click Me</button>\nB. <button onClick={event => this.handleClick(event)}>Click Me</button>\n```\n\n",
        "selection": [
            {
                "rawOption": " Button A will not have access to the event object on click of the button.\n"
            },
            {
                "rawOption": " Button B will not fire the handler this.handleClick successfully.\n"
            },
            {
                "rawOption": " Button A will not fire the handler this.handleClick successfully.\n"
            },
            {
                "rawOption": " There is no difference."
            }
        ],
        "answers": [
            3
        ]
    },
    "20": {
        "rawQuestion": "#### Q21. How do you destructure the properties that are sent to the Dish component?\n\n```javascript\nfunction Dish(props) {\n  return (\n    <h1>\n      {props.name} {props.cookingTime}\n    </h1>\n  );\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `function Dish([name, cookingTime]) { return <h1>{name} {cookingTime}</h1>; }`\n"
            },
            {
                "rawOption": " `function Dish({name, cookingTime}) { return <h1>{name} {cookingTime}</h1>; }`\n"
            },
            {
                "rawOption": " `function Dish(props) { return <h1>{name} {cookingTime}</h1>; }`\n"
            },
            {
                "rawOption": " `function Dish(...props) { return <h1>{name} {cookingTime}</h1>; }`"
            }
        ],
        "answers": [
            1
        ]
    },
    "21": {
        "rawQuestion": "#### Q22. When might you use `React.PureComponent`?\n\n",
        "selection": [
            {
                "rawOption": " when you do not want your component to have props\n"
            },
            {
                "rawOption": " when you have sibling components that need to be compared\n"
            },
            {
                "rawOption": " when you want a default implementation of `shouldComponentUpdate()`\n"
            },
            {
                "rawOption": " when you do not want your component to have state"
            }
        ],
        "answers": [
            2
        ]
    },
    "22": {
        "rawQuestion": "#### Q23. Why is it important to avoid copying the values of props into a component's state where possible?\n\n",
        "selection": [
            {
                "rawOption": " because you should never mutate state\n"
            },
            {
                "rawOption": " because `getDerivedStateFromProps()` is an unsafe method to use\n"
            },
            {
                "rawOption": " because you want to allow a component to update in response to changes in the props\n"
            },
            {
                "rawOption": " because you want to allow data to flow back up to the parent"
            }
        ],
        "answers": [
            2
        ]
    },
    "23": {
        "rawQuestion": "#### Q24. What is the children prop?\n\n",
        "selection": [
            {
                "rawOption": " a property that adds child components to state\n"
            },
            {
                "rawOption": " a special property that JSX creates on components that contain both an opening tag and a closing tag, referencing it's contents.\n"
            },
            {
                "rawOption": " a property that lets you set an array as a property\n"
            },
            {
                "rawOption": " a property that lets you pass data to child elements"
            }
        ],
        "answers": [
            1
        ]
    },
    "24": {
        "rawQuestion": "#### Q25. Which attribute is React's replacement for using innerHTML in the browser DOM?\n\n",
        "selection": [
            {
                "rawOption": " injectHTML\n"
            },
            {
                "rawOption": " dangerouslySetInnerHTML\n"
            },
            {
                "rawOption": " weirdSetInnerHTML\n"
            },
            {
                "rawOption": " strangeHTML"
            }
        ],
        "answers": [
            1
        ]
    },
    "25": {
        "rawQuestion": "#### Q26. Which of these terms commonly describe React applications?\n\n",
        "selection": [
            {
                "rawOption": " declarative\n"
            },
            {
                "rawOption": " integrated\n"
            },
            {
                "rawOption": " closed\n"
            },
            {
                "rawOption": " imperative"
            }
        ],
        "answers": [
            0
        ]
    },
    "26": {
        "rawQuestion": "#### Q27. When using webpack, why would you need to use a loader?\n\n",
        "selection": [
            {
                "rawOption": " to put together physical file folders\n"
            },
            {
                "rawOption": " to preprocess files\n"
            },
            {
                "rawOption": " to load external data\n"
            },
            {
                "rawOption": " to load the website into everyone's phone"
            }
        ],
        "answers": [
            1
        ]
    },
    "27": {
        "rawQuestion": "#### Q28. A representation of a user interface that is kept in memory and is synced with the \"real\" DOM is called what?\n\n",
        "selection": [
            {
                "rawOption": " virtual DOM\n"
            },
            {
                "rawOption": " DOM\n"
            },
            {
                "rawOption": " virtual elements\n"
            },
            {
                "rawOption": " shadow DOM"
            }
        ],
        "answers": [
            0
        ]
    },
    "28": {
        "rawQuestion": "#### Q29. You have written the following code but nothing is rendering. How do you fix this problem?\n\n```javascript\nconst Heading = () => {\n  <h1>Hello!</h1>;\n};\n```\n\n",
        "selection": [
            {
                "rawOption": " Add a render function.\n"
            },
            {
                "rawOption": " Change the curly braces to parentheses or add a return statement before the `h1` tag.\n"
            },
            {
                "rawOption": " Move the `h1` to another component.\n"
            },
            {
                "rawOption": " Surround the `h1` in a `div`."
            }
        ],
        "answers": [
            1
        ]
    },
    "29": {
        "rawQuestion": "#### Q30. To create a constant in JavaScript, which keyword do you use?\n\n",
        "selection": [
            {
                "rawOption": " const\n"
            },
            {
                "rawOption": " let\n"
            },
            {
                "rawOption": " constant\n"
            },
            {
                "rawOption": " var"
            }
        ],
        "answers": [
            0
        ]
    },
    "30": {
        "rawQuestion": "#### Q31. What do you call a React component that catches JavaScript errors anywhere in the child component tree?\n\n",
        "selection": [
            {
                "rawOption": " error bosses\n"
            },
            {
                "rawOption": " error catchers\n"
            },
            {
                "rawOption": " error helpers\n"
            },
            {
                "rawOption": " error boundaries"
            }
        ],
        "answers": [
            3
        ]
    },
    "31": {
        "rawQuestion": "#### Q32. In which lifecycle method do you make requests for data in a class component?\n\n",
        "selection": [
            {
                "rawOption": " constructor\n"
            },
            {
                "rawOption": " componentDidMount\n"
            },
            {
                "rawOption": " componentWillReceiveProps\n"
            },
            {
                "rawOption": " componentWillMount"
            }
        ],
        "answers": [
            1
        ]
    },
    "32": {
        "rawQuestion": "#### Q33. React components are composed to create a user interface. How are components composed?\n\n",
        "selection": [
            {
                "rawOption": " by putting them in the same file\n"
            },
            {
                "rawOption": " by nesting components\n"
            },
            {
                "rawOption": " with webpack\n"
            },
            {
                "rawOption": " with code splitting"
            }
        ],
        "answers": [
            1
        ]
    },
    "33": {
        "rawQuestion": "#### Q34. All React components must act like **\\_** with respect to their props.\n\n",
        "selection": [
            {
                "rawOption": " monads\n"
            },
            {
                "rawOption": " pure functions\n"
            },
            {
                "rawOption": " recursive functions\n"
            },
            {
                "rawOption": " higher-order functions"
            }
        ],
        "answers": [
            1
        ]
    },
    "34": {
        "rawQuestion": "#### Q35. What is `[e.target.id]` called in this code snippet?\n\n```javascript\nconst handleChange = (e) => {\n  setState((prevState) => ({ ...prevState, [e.target.id]: e.target.value }));\n};\n```\n\n",
        "selection": [
            {
                "rawOption": " a computed property name\n"
            },
            {
                "rawOption": " a set value\n"
            },
            {
                "rawOption": " a dynamic key\n"
            },
            {
                "rawOption": " a JSX code string"
            }
        ],
        "answers": [
            2
        ]
    },
    "35": {
        "rawQuestion": "#### Q36. What is the name of this component?\n\n```javascript\nclass Clock extends React.Component {\n  render() {\n    return <h1>Look at the time: {time}</h1>;\n  }\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " Clock\n"
            },
            {
                "rawOption": " It does not have a name prop.\n"
            },
            {
                "rawOption": " React.Component\n"
            },
            {
                "rawOption": " Component"
            }
        ],
        "answers": [
            0
        ]
    },
    "36": {
        "rawQuestion": "#### Q37. What is sent to an `Array.map()` function?\n\n",
        "selection": [
            {
                "rawOption": " a callback function that is called once for each element in the array\n"
            },
            {
                "rawOption": " the name of another array to iterate over\n"
            },
            {
                "rawOption": " the number of times you want to call the function\n"
            },
            {
                "rawOption": " a string describing what the function should do"
            }
        ],
        "answers": [
            0
        ]
    },
    "37": {
        "rawQuestion": "#### Q38. Why is it a good idea to pass a function to `setState` instead of an object?\n\n",
        "selection": [
            {
                "rawOption": " It provides better encapsulation.\n"
            },
            {
                "rawOption": " It makes sure that the object is not mutated.\n"
            },
            {
                "rawOption": " It automatically updates a component.\n"
            },
            {
                "rawOption": " `setState` is asynchronous and might result in out of sync values."
            }
        ],
        "answers": [
            3
        ]
    },
    "38": {
        "rawQuestion": "#### Q39. What package contains the render() function that renders a React element tree to the DOM?\n\n",
        "selection": [
            {
                "rawOption": " `React`\n"
            },
            {
                "rawOption": " `ReactDOM`\n"
            },
            {
                "rawOption": " `Render`\n"
            },
            {
                "rawOption": " `DOM`"
            }
        ],
        "answers": [
            1
        ]
    },
    "39": {
        "rawQuestion": "#### Q40. How do you set a default value for an uncontrolled form field?\n\n",
        "selection": [
            {
                "rawOption": " Use the `value` property.\n"
            },
            {
                "rawOption": " Use the `defaultValue` property.\n"
            },
            {
                "rawOption": " Use the `default` property.\n"
            },
            {
                "rawOption": " It assigns one automatically."
            }
        ],
        "answers": [
            1
        ]
    },
    "40": {
        "rawQuestion": "#### Q41. What do you need to change about this code to get it to run?\n\n```js\nconst clock = (props) => {\n  return <h1>Look at the time: {props.time}</h1>;\n};\n```\n\n",
        "selection": [
            {
                "rawOption": " Add quotes around the return value\n"
            },
            {
                "rawOption": " Remove `this`\n"
            },
            {
                "rawOption": " Remove the render method\n"
            },
            {
                "rawOption": " Capitalize `clock`"
            }
        ],
        "answers": [
            3
        ]
    },
    "41": {
        "rawQuestion": "#### Q42. Which Hook could be used to update the document's title?\n\n",
        "selection": [
            {
                "rawOption": " `useEffect(function updateTitle() { document.title = name + ' ' + lastname; });`\n"
            },
            {
                "rawOption": " `useEffect(() => { title = name + ' ' + lastname; });`\n"
            },
            {
                "rawOption": " `useEffect(function updateTitle() { name + ' ' + lastname; });`\n"
            },
            {
                "rawOption": " `useEffect(function updateTitle() { title = name + ' ' + lastname; });`"
            }
        ],
        "answers": [
            0
        ]
    },
    "42": {
        "rawQuestion": "#### Q43. Which function from React can you use to wrap Component imports to load them lazily?\n\n",
        "selection": [
            {
                "rawOption": " `fallback`\n"
            },
            {
                "rawOption": " `split`\n"
            },
            {
                "rawOption": " `lazy`\n"
            },
            {
                "rawOption": " `memo`"
            }
        ],
        "answers": [
            2
        ]
    },
    "43": {
        "rawQuestion": "#### Q44. How do you invoke setDone only when component mounts, using hooks?\n\n```javascript\nfunction MyComponent(props) {\n  const [done, setDone] = useState(false);\n\n  return <h1>Done: {done}</h1>;\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `useEffect(() => { setDone(true); });`\n"
            },
            {
                "rawOption": " `useEffect(() => { setDone(true); }, []);`\n"
            },
            {
                "rawOption": " `useEffect(() => { setDone(true); }, [setDone]);`\n"
            },
            {
                "rawOption": " `useEffect(() => { setDone(true); }, [done, setDone]);`"
            }
        ],
        "answers": [
            1
        ]
    },
    "44": {
        "rawQuestion": "#### Q45. Currently, `handleClick` is being called instead of passed as a reference. How do you fix this?\n\n```javascript\n<button onClick={this.handleClick()}>Click this</button>\n```\n\n",
        "selection": [
            {
                "rawOption": " `<button onClick={this.handleClick.bind(handleClick)}>Click this</button>`\n"
            },
            {
                "rawOption": " `<button onClick={handleClick()}>Click this</button>`\n"
            },
            {
                "rawOption": " `<button onClick={this.handleClick}>Click this</button>`\n"
            },
            {
                "rawOption": " `<button onclick={this.handleClick}>Click this</button>`"
            }
        ],
        "answers": [
            2
        ]
    },
    "45": {
        "rawQuestion": "#### Q46. Which answer best describes a function component?\n\n",
        "selection": [
            {
                "rawOption": " A function component is the same as a class component.\n"
            },
            {
                "rawOption": " A function component accepts a single props object and returns a React element.\n"
            },
            {
                "rawOption": " A function component is the only way to create a component.\n"
            },
            {
                "rawOption": " A function component is required to create a React component."
            }
        ],
        "answers": [
            1
        ]
    },
    "46": {
        "rawQuestion": "#### Q47. Which library does the `fetch()` function come from?\n\n",
        "selection": [
            {
                "rawOption": " FetchJS\n"
            },
            {
                "rawOption": " ReactDOM\n"
            },
            {
                "rawOption": " No library. `fetch()` is supported by most browsers.\n"
            },
            {
                "rawOption": " React"
            }
        ],
        "answers": [
            2
        ]
    },
    "47": {
        "rawQuestion": "#### Q48. What will happen when this useEffect Hook is executed, assuming name is not already equal to John?\n\n```javascript\nuseEffect(() => {\n  setName('John');\n}, [name]);\n```\n\n",
        "selection": [
            {
                "rawOption": " It will cause an error immediately.\n"
            },
            {
                "rawOption": " It will execute the code inside the function, but only after waiting to ensure that no other component is accessing the name variable.\n"
            },
            {
                "rawOption": " It will update the value of name once and not run again until name is changed from the outside.\n"
            },
            {
                "rawOption": " It will cause an infinite loop."
            }
        ],
        "answers": [
            3
        ]
    },
    "48": {
        "rawQuestion": "#### Q49. Which choice will not cause a React component to rerender?\n\n",
        "selection": [
            {
                "rawOption": " if the component calls `this.setState(...)`\n"
            },
            {
                "rawOption": " the value of one of the component's props changes\n"
            },
            {
                "rawOption": " if the component calls `this.forceUpdate()`\n"
            },
            {
                "rawOption": " one of the component's siblings rerenders"
            }
        ],
        "answers": [
            3
        ]
    },
    "49": {
        "rawQuestion": "#### Q50. You have created a new method in a class component called handleClick, but it is not working. Which code is missing?\n\n```javascript\nclass Button extends React.Component{\n\n  constructor(props) {\n    super(props);\n    // Missing line\n  }\n\n  handleClick() {...}\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `this.handleClick.bind(this);`\n"
            },
            {
                "rawOption": " `props.bind(handleClick);`\n"
            },
            {
                "rawOption": " `this.handleClick.bind();`\n"
            },
            {
                "rawOption": " `this.handleClick = this.handleClick.bind(this);`"
            }
        ],
        "answers": [
            3
        ]
    },
    "50": {
        "rawQuestion": "#### Q51. If you wanted to display the count state value in the component, what do you need to add to the curly braces in the `h1`?\n\n```javascript\nclass Ticker extends React.component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n  render() {\n    return <h1>{}</h1>;\n  }\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " this.state.count\n"
            },
            {
                "rawOption": " count\n"
            },
            {
                "rawOption": " state\n"
            },
            {
                "rawOption": " state.count"
            }
        ],
        "answers": [
            0
        ]
    },
    "51": {
        "rawQuestion": "#### Q52. Per the following code, when is the Hello component assigned to greeting?\n\n```javascript\nconst greeting = isLoggedIn ? <Hello /> : null;\n```\n\n",
        "selection": [
            {
                "rawOption": " never\n"
            },
            {
                "rawOption": " when `isLoggedIn` is true\n"
            },
            {
                "rawOption": " when a user logs in\n"
            },
            {
                "rawOption": " when the Hello function is called"
            }
        ],
        "answers": [
            1
        ]
    },
    "52": {
        "rawQuestion": "#### Q53. In the following code block, what type is orderNumber?\n\n```javascript\nReactDOM.render(<Message orderNumber=\"16\" />, document.getElementById('root'));\n```\n\n",
        "selection": [
            {
                "rawOption": " string\n"
            },
            {
                "rawOption": " boolean\n"
            },
            {
                "rawOption": " object\n"
            },
            {
                "rawOption": " number"
            }
        ],
        "answers": [
            0
        ]
    },
    "53": {
        "rawQuestion": "#### Q54. You have added a style property to the `h1` but there is an unexpected token error when it runs. How do you fix this?\n\n```javascript\nconst element = <h1 style={ backgroundColor: \"blue\" }>Hi</h1>;\n```\n\n",
        "selection": [
            {
                "rawOption": " `const element = <h1 style=\"backgroundColor: \"blue\"\"}>Hi</h1>;`\n"
            },
            {
                "rawOption": " `const element = <h1 style={{backgroundColor: \"blue\"}}>Hi</h1>;`\n"
            },
            {
                "rawOption": " `const element = <h1 style={blue}>Hi</h1>;`\n"
            },
            {
                "rawOption": " `const element = <h1 style=\"blue\">Hi</h1>;`"
            }
        ],
        "answers": [
            1
        ]
    },
    "54": {
        "rawQuestion": "#### Q55. Which function is used to update state variables in a React class component?\n\n",
        "selection": [
            {
                "rawOption": " `replaceState`\n"
            },
            {
                "rawOption": " `refreshState`\n"
            },
            {
                "rawOption": " `updateState`\n"
            },
            {
                "rawOption": " `setState`"
            }
        ],
        "answers": [
            3
        ]
    },
    "55": {
        "rawQuestion": "#### Q56. Consider the following component. What is the default color for the star?\n\n```javascript\nconst Star = ({ selected = false }) => <Icon color={selected ? 'red' : 'grey'} />;\n```\n\n",
        "selection": [
            {
                "rawOption": " black\n"
            },
            {
                "rawOption": " red\n"
            },
            {
                "rawOption": " grey\n"
            },
            {
                "rawOption": " white"
            }
        ],
        "answers": [
            2
        ]
    },
    "56": {
        "rawQuestion": "#### Q57. What is the difference between the click behaviors of these two buttons(assuming that this.handleClick is not bound correctly)\n\n```javascript\n  A. <button onClick=this.handleClick>Click Me</button>\n  B. <button onClick={event => this.handleClick(event)}>Click Me</button>\n```\n\n",
        "selection": [
            {
                "rawOption": " `Button A will not have access to the event object on click of the button`\n"
            },
            {
                "rawOption": " `Button A will not fire the handler this.handleClick successfully`\n"
            },
            {
                "rawOption": " `There is no difference`\n"
            },
            {
                "rawOption": " `Button B will not fire the handler this.handleClick successfully`"
            }
        ],
        "answers": [
            1
        ]
    },
    "57": {
        "rawQuestion": "#### Q58. How would you add to this code, from React Router, to display a component called About?\n\n",
        "selection": [
            {
                "rawOption": " A"
            }
        ],
        "answers": [
            0
        ]
    },
    "58": {
        "rawQuestion": "#### Q59. Give the code below, what does the second argument that is sent to the render function describe?\n\n```javascript\nReactDOM.render(\n  <h1>Hi<h1>,\n    document.getElementById('root')\n)\n```\n\n",
        "selection": [
            {
                "rawOption": " where the React element should be added to the DOM\n"
            },
            {
                "rawOption": " where to call the function\n"
            },
            {
                "rawOption": " where the root component is\n"
            },
            {
                "rawOption": " where to create a new JavaScript file"
            }
        ],
        "answers": [
            0
        ]
    },
    "59": {
        "rawQuestion": "#### Q60. Why should you use React Router's Link component instead of a basic `<a>` tag in React?\n\n",
        "selection": [
            {
                "rawOption": " The link component allows the user to use the browser's `Back` button.\n"
            },
            {
                "rawOption": " There is no difference--the `Link` component is just another name for the `<a>` tag.\n"
            },
            {
                "rawOption": " The `<a>` tag will cause an error when used in React.\n"
            },
            {
                "rawOption": " The `<a>` tag triggers a full page reload, while the `Link` component does not."
            }
        ],
        "answers": [
            3
        ]
    },
    "60": {
        "rawQuestion": "#### Q61. What is the first argument, `x`, that is sent to the `createElement` function?\n\n```javascript\nReact.createElement(x, y, z);\n```\n\n",
        "selection": [
            {
                "rawOption": " the element that should be created\n"
            },
            {
                "rawOption": " the order in which this element should be placed on the page\n"
            },
            {
                "rawOption": " the properties of the element\n"
            },
            {
                "rawOption": " data that should be displayed in the element"
            }
        ],
        "answers": [
            0
        ]
    },
    "61": {
        "rawQuestion": "#### Q62. Which class-based lifecycle method would be called at the same time as this effect Hook?\n\n```javascript\nuseEffect(() => {\n  // do things\n}, []);\n```\n\n",
        "selection": [
            {
                "rawOption": " componentWillUnmount\n"
            },
            {
                "rawOption": " componentDidMount\n"
            },
            {
                "rawOption": " render\n"
            },
            {
                "rawOption": " componentDidUpdate"
            }
        ],
        "answers": [
            1
        ]
    },
    "62": {
        "rawQuestion": "#### Q63. What is the name of the base component of this component?\n\n```javascript\nclass Comp extends React.Component {\n  render() {\n    return <h1>Look at the time: {time}</h1>;\n  }\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " Comp\n"
            },
            {
                "rawOption": " h1\n"
            },
            {
                "rawOption": " React.Component\n"
            },
            {
                "rawOption": " Component"
            }
        ],
        "answers": [
            3
        ]
    },
    "63": {
        "rawQuestion": "#### Q64. When using a portal, what is the first argument?\n\n```javascript\nReactDOM.createPortal(x, y);\n```\n\n",
        "selection": [
            {
                "rawOption": " the current state\n"
            },
            {
                "rawOption": " the element to render\n"
            },
            {
                "rawOption": " the App component\n"
            },
            {
                "rawOption": " the page"
            }
        ],
        "answers": [
            1
        ]
    },
    "64": {
        "rawQuestion": "#### Q65. What is `setCount`?\n\n```javascript\nconst [count, setCount] = useState(0);\n```\n\n",
        "selection": [
            {
                "rawOption": " the initial state value\n"
            },
            {
                "rawOption": " a variable\n"
            },
            {
                "rawOption": " a state object\n"
            },
            {
                "rawOption": " a function to update the state"
            }
        ],
        "answers": [
            3
        ]
    },
    "65": {
        "rawQuestion": "#### Q66. What is the use of map function below?\n\n```javascript\nconst database = [{ data: 1 }, { data: 2 }, { data: 3 }];\ndatabase.map((user) => <h1>{user.data}</h1>);\n```\n\n",
        "selection": [
            {
                "rawOption": " gives a map of all the entries in database\n"
            },
            {
                "rawOption": " returns a heading tag for every entry in the database containing it's data\n"
            },
            {
                "rawOption": " returns one heading tag for all the entries in database\n"
            },
            {
                "rawOption": " checks which entry in the database is suitable for heading tag"
            }
        ],
        "answers": [
            1
        ]
    },
    "66": {
        "rawQuestion": "#### Q67. Describe what is happening in this code?\n\n```javascript\nconst { name: firstName } = props;\n```\n\n",
        "selection": [
            {
                "rawOption": " It is creating a new object that contains the same name property as the props object.\n"
            },
            {
                "rawOption": " It is assigning the value of the props object's firstName property to a constant called name.\n"
            },
            {
                "rawOption": " It is retrieving the value of props.name.firstName.\n"
            },
            {
                "rawOption": " It is assigning the value of the props object's name property to a constant called firstName."
            }
        ],
        "answers": [
            3
        ]
    },
    "67": {
        "rawQuestion": "#### Q68. What is wrong with this code?\n\n```javascript\nconst MyComponent = ({ names }) => (\n  <h1>Hello</h1>\n  <p>Hello again</p>\n);\n```\n\n",
        "selection": [
            {
                "rawOption": " React components cannot be defined using functions.\n"
            },
            {
                "rawOption": " React does not allow components to return more than one element.\n"
            },
            {
                "rawOption": " The component needs to use the return keyword.\n"
            },
            {
                "rawOption": " String literals must be surrounded by quotes."
            }
        ],
        "answers": [
            1
        ]
    },
    "68": {
        "rawQuestion": "#### Q69. When using a portal, what is the second argument?\n\n```javascript\nReactDOM.createPortal(x, y);\n```\n\n",
        "selection": [
            {
                "rawOption": " the App component\n"
            },
            {
                "rawOption": " the page\n"
            },
            {
                "rawOption": " the current state\n"
            },
            {
                "rawOption": " the DOM element that exists outside of the parent component"
            }
        ],
        "answers": [
            3
        ]
    },
    "69": {
        "rawQuestion": "#### Q70. Given this code, what will be printed in the `<div>` tag?\n\n```javascript\nconst MyComponent = ({ children }) => (\n  <div>{children.length}</div>\n);\n...\n<MyComponent>\n<p>\n  Hello <span>World!</span>\n</p>\n<p>Goodbye</p>\n</MyComponent>\n```\n\n",
        "selection": [
            {
                "rawOption": " It will produce an error saying \"cannot read property \"length\" of undefined.\"\n"
            },
            {
                "rawOption": " 1\n"
            },
            {
                "rawOption": " undefined\n"
            },
            {
                "rawOption": " 2"
            }
        ],
        "answers": [
            3
        ]
    },
    "70": {
        "rawQuestion": "#### Q71. What is this pattern called?\n\n```javascript\nconst [count, setCount] = useState(0);\n```\n\n",
        "selection": [
            {
                "rawOption": " object destructuring\n"
            },
            {
                "rawOption": " array destructuring\n"
            },
            {
                "rawOption": " spread operating\n"
            },
            {
                "rawOption": " code pushing"
            }
        ],
        "answers": [
            1
        ]
    },
    "71": {
        "rawQuestion": "#### Q72. What is the first file loaded by the browser in a basic React project?\n\n",
        "selection": [
            {
                "rawOption": " src/App.js\n"
            },
            {
                "rawOption": " src/index.js\n"
            },
            {
                "rawOption": " public/manifest.json\n"
            },
            {
                "rawOption": " public/index.html"
            }
        ],
        "answers": [
            3
        ]
    },
    "72": {
        "rawQuestion": "#### Q73. The code below is rendering nothing and generates this error: \"ReactDOM is not defined.\" How do you fix this issue?\n\n```javascript\nimport React from 'react';\nimport { createRoot } from 'reactjs-dom';\n\nconst element = <h1>Hi</h1>;\n// Note: error on the line below\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(element);\n```\n\n",
        "selection": [
            {
                "rawOption": " `createRoot(document.getElementById(\"root\"));`\n"
            },
            {
                "rawOption": " `ReactDOM(element, document.getElementById(\"root\"));`\n"
            },
            {
                "rawOption": " `renderDOM(element, document.getElementById(\"root\"));`\n"
            },
            {
                "rawOption": " `DOM(element, document.getElementById(\"root\"));`"
            }
        ],
        "answers": [
            0
        ]
    },
    "73": {
        "rawQuestion": "#### Q74. In this component, how do you display whether the user was logged in or not?\n\n```javascript\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      The user is:\n    </div>\n  );\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `The user is loggedIn ? logged in : not logged in.`\n"
            },
            {
                "rawOption": " Write a function to check the login status.\n"
            },
            {
                "rawOption": " `The user is {isLoggedIn = \"no\"}.`\n"
            },
            {
                "rawOption": " `The user is {isLoggedIn ? \"logged in.\" : \"not logged in\"}.`"
            }
        ],
        "answers": [
            3
        ]
    },
    "74": {
        "rawQuestion": "#### Q75. You are rendering a list with React when this warning appears in the console: \"Warning: Each child in a list should have a unique 'key' prop.\" How do you fix this issue?\n\n",
        "selection": [
            {
                "rawOption": " Add a key prop with the same value to each item in the list\n"
            },
            {
                "rawOption": " Clear the console warnings\n"
            },
            {
                "rawOption": " Use the UseId hook to generate a unique key for each element in the list\n"
            },
            {
                "rawOption": " When iterating over the list items, add a unique property to each list item."
            }
        ],
        "answers": [
            3
        ]
    },
    "75": {
        "rawQuestion": "#### Q76. How would you generate the boilerplate code for a new app that you are building to collect underpants?\n\n",
        "selection": [
            {
                "rawOption": " npm create-react-app collect-underpants\n"
            },
            {
                "rawOption": " npx start-app collect-underpants\n"
            },
            {
                "rawOption": " react new collect-underpants\n"
            },
            {
                "rawOption": " npx create-react-app collect-underpants"
            }
        ],
        "answers": [
            3
        ]
    },
    "76": {
        "rawQuestion": "#### Q77. Add the code that will fire the photon torpedoes when the button is clicked.\n\n```javascript\nclass StarTrekkin extends React.Component {\n  firePhotonTorpedoes(e) {\n    console.log('pew pew');\n  }\n  render() {\n    return; // Missing code\n  }\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `<button onClick={firePhotonTorpedoes()}>Pew Pew</button>`\n"
            },
            {
                "rawOption": " `<button onClick={firePhotonTorpedoes}>Pew Pew</button>`\n"
            },
            {
                "rawOption": " `<button onClick={this.firePhotonTorpedoes()}>Pew Pew</button>`\n"
            },
            {
                "rawOption": " `<button onClick={this.firePhotonTorpedoes}>Pew Pew</button>`"
            }
        ],
        "answers": [
            3
        ]
    },
    "77": {
        "rawQuestion": "#### Q78. What is the process of deciding whether an update is necessary?\n\n",
        "selection": [
            {
                "rawOption": " shadow DOM\n"
            },
            {
                "rawOption": " fiber\n"
            },
            {
                "rawOption": " reconciliation\n"
            },
            {
                "rawOption": " setting state"
            }
        ],
        "answers": [
            2
        ]
    },
    "78": {
        "rawQuestion": "#### Q79. React is an open-source project but is maintained by which company?\n\n",
        "selection": [
            {
                "rawOption": " Intuit\n"
            },
            {
                "rawOption": " Twitter\n"
            },
            {
                "rawOption": " Facebook\n"
            },
            {
                "rawOption": " Snapchat"
            }
        ],
        "answers": [
            2
        ]
    },
    "79": {
        "rawQuestion": "#### Q80. What command can you use to generate a React project?\n\n",
        "selection": [
            {
                "rawOption": " react-starter\n"
            },
            {
                "rawOption": " create-react-app\n"
            },
            {
                "rawOption": " react-gen\n"
            },
            {
                "rawOption": " react-start"
            }
        ],
        "answers": [
            1
        ]
    },
    "80": {
        "rawQuestion": "#### Q81. What is the browser extension called that React developers use to debug applications?\n\n",
        "selection": [
            {
                "rawOption": " React Developer Tools\n"
            },
            {
                "rawOption": " React Tooling Add-on\n"
            },
            {
                "rawOption": " React Codewatch\n"
            },
            {
                "rawOption": " React Debug"
            }
        ],
        "answers": [
            0
        ]
    },
    "81": {
        "rawQuestion": "#### Q82. Which tool is not part of Create React App?\n\n",
        "selection": [
            {
                "rawOption": " React\n"
            },
            {
                "rawOption": " jQuery\n"
            },
            {
                "rawOption": " webpack\n"
            },
            {
                "rawOption": " ReactDOM"
            }
        ],
        "answers": [
            1
        ]
    },
    "82": {
        "rawQuestion": "#### Q83. What is the JavaScript syntax extension that is commonly used to create React elements?\n\n",
        "selection": [
            {
                "rawOption": " HTML\n"
            },
            {
                "rawOption": " JavaScriptX\n"
            },
            {
                "rawOption": " JSX\n"
            },
            {
                "rawOption": " React JavaScript"
            }
        ],
        "answers": [
            2
        ]
    },
    "83": {
        "rawQuestion": "#### Q84. How might you check property types without using Flow or TypeScript?\n\n",
        "selection": [
            {
                "rawOption": " Check Manually.\n"
            },
            {
                "rawOption": " Use `prop-helper`.\n"
            },
            {
                "rawOption": " use `prop-types`.\n"
            },
            {
                "rawOption": " user `checker-types`."
            }
        ],
        "answers": [
            2
        ]
    },
    "84": {
        "rawQuestion": "#### Q85. How do you add an id of heading to the following h1 element?\n\n```javascript\nlet dish = <h1>Mac and Cheese</h1>;\n```\n\n",
        "selection": [
            {
                "rawOption": " `let dish = <h1 id={heading}>Mac and Cheese</h1>;`\n"
            },
            {
                "rawOption": " `let dish = <h1 id=\"heading\">Mac and Cheese</h1>;`\n"
            },
            {
                "rawOption": " `let dish = <h1 id:\"heading\">Mac and Cheese</h1>;`\n"
            },
            {
                "rawOption": " `let dish = <h1 class=\"heading\">Mac and Cheese</h1>;`"
            }
        ],
        "answers": [
            1
        ]
    },
    "85": {
        "rawQuestion": "#### Q86. What value of button will allow you to pass the name of the person to be hugged?\n\n```javascript\nclass Huggable extends React.Component {\n  hug(id) {\n    console.log(\"hugging \" + id);\n  }\n  render() {\n    let name = \"kitten\";\n    let button = // Missing code\n    return button;\n  }\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `<button onClick={(name) => this.hug(name)}>Hug Button</button>;`\n"
            },
            {
                "rawOption": " `<button onClick={this.hug(e, name)}>Hug Button</button>;`\n"
            },
            {
                "rawOption": " `<button onClick={(e) => hug(name, e)}>Hug Button</button>;`\n"
            },
            {
                "rawOption": " `<button onClick={(e) => this.hug(name, e)}>Hug Button</button>;`"
            }
        ],
        "answers": [
            3
        ]
    },
    "86": {
        "rawQuestion": "#### Q87. What syntax do you use to create a component in React?\n\n",
        "selection": [
            {
                "rawOption": " a generator\n"
            },
            {
                "rawOption": " a function or a class\n"
            },
            {
                "rawOption": " a service worker\n"
            },
            {
                "rawOption": " a tag"
            }
        ],
        "answers": [
            1
        ]
    },
    "87": {
        "rawQuestion": "#### Q88. You want to disable a button so that it does not emit any events onClick. Which prop do you use to acomplish this?\n\n",
        "selection": [
            {
                "rawOption": " onBlur\n"
            },
            {
                "rawOption": " onPress\n"
            },
            {
                "rawOption": " defaultValue\n"
            },
            {
                "rawOption": " disabled"
            }
        ],
        "answers": [
            3
        ]
    },
    "88": {
        "rawQuestion": "#### Q89. In this function, which is the best way to describe the Dish component?\n\n```javascript\nfunction Dish() {\n  return (\n    <>\n      <Ingredient />\n      <Ingredient />\n    </>\n  );\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " child component\n"
            },
            {
                "rawOption": " parent component\n"
            },
            {
                "rawOption": " nested component\n"
            },
            {
                "rawOption": " sibling component"
            }
        ],
        "answers": [
            1
        ]
    },
    "89": {
        "rawQuestion": "#### Q90. When does the componentDidMount function fire?\n\n",
        "selection": [
            {
                "rawOption": " right after the component is added to the DOM\n"
            },
            {
                "rawOption": " before the component is added to the DOM\n"
            },
            {
                "rawOption": " right after the component is updated\n"
            },
            {
                "rawOption": " right after an API call"
            }
        ],
        "answers": [
            0
        ]
    },
    "90": {
        "rawQuestion": "#### Q91. What might you use webpack for in React development?\n\n",
        "selection": [
            {
                "rawOption": " to fetch remote dependencies used by your app\n"
            },
            {
                "rawOption": " to split your app into smaller chunks that can be more easily loaded by the browser\n"
            },
            {
                "rawOption": " to format your code so that it is more readable\n"
            },
            {
                "rawOption": " to ensure your app is not vulnerable to code injection"
            }
        ],
        "answers": [
            1
        ]
    },
    "91": {
        "rawQuestion": "#### Q92. When using the React Developer Tools Chrome extension, what does it mean if the React icon is red?\n\n",
        "selection": [
            {
                "rawOption": " You are using the development build of React.\n"
            },
            {
                "rawOption": " You are using the production build of React.\n"
            },
            {
                "rawOption": " You are using webpack.\n"
            },
            {
                "rawOption": " You are using Create React App."
            }
        ],
        "answers": [
            0
        ]
    },
    "92": {
        "rawQuestion": "#### Q93. How would you modify the constructor to fix this error: \"ReferenceError: Must call super constructor in derived class before accessing 'this'...\"?\n\n```javascript\nclass TransIsBeautiful extends React.Component {\n  constructor(props){\n  // Missing line\n  console.log(this) ;\n  }\n  ...\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " render(props);\n"
            },
            {
                "rawOption": " super(props);\n"
            },
            {
                "rawOption": " super(this);\n"
            },
            {
                "rawOption": " this.super();"
            }
        ],
        "answers": [
            1
        ]
    },
    "93": {
        "rawQuestion": "#### Q94. Which language can you not use with React?\n\n",
        "selection": [
            {
                "rawOption": " Swift.\n"
            },
            {
                "rawOption": " JSX.\n"
            },
            {
                "rawOption": " Javascipt.\n"
            },
            {
                "rawOption": " TypeScript."
            }
        ],
        "answers": [
            0
        ]
    },
    "94": {
        "rawQuestion": "#### Q95. This code is part of an app that collects Pokemon. How would you print the list of the ones collected so far?\n\n```javascript\nconstructor(props) {\n    super(props);\n    this.state = {\n        pokeDex: []\n    };\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " console.log(props.pokeDex);\n"
            },
            {
                "rawOption": " console.log(this.props.pokeDex);\n"
            },
            {
                "rawOption": " console.log(pokeDex);\n"
            },
            {
                "rawOption": " console.log(this.state.pokeDex);"
            }
        ],
        "answers": [
            3
        ]
    },
    "95": {
        "rawQuestion": "#### Q96. What would be the result of running this code?\n\n```javascript\nfunction add(x = 1, y = 2) {\n  return x + y;\n}\n\nadd();\n```\n\n",
        "selection": [
            {
                "rawOption": " null\n"
            },
            {
                "rawOption": " 3\n"
            },
            {
                "rawOption": " 0\n"
            },
            {
                "rawOption": " undefined"
            }
        ],
        "answers": [
            1
        ]
    },
    "96": {
        "rawQuestion": "#### Q97. Why might you use a React.ref?\n\n",
        "selection": [
            {
                "rawOption": " to refer to another JS file\n"
            },
            {
                "rawOption": " to bind the function\n"
            },
            {
                "rawOption": " to call a function\n"
            },
            {
                "rawOption": " to directly access the DOM node"
            }
        ],
        "answers": [
            3
        ]
    },
    "97": {
        "rawQuestion": "#### Q98. What pattern is being used in this code block?\n\n```javascript\nconst { tree, lake } = nature;\n```\n\n",
        "selection": [
            {
                "rawOption": " function defaults\n"
            },
            {
                "rawOption": " array destructuring\n"
            },
            {
                "rawOption": " PRPL pattern\n"
            },
            {
                "rawOption": " destructuring assignment"
            }
        ],
        "answers": [
            3
        ]
    },
    "98": {
        "rawQuestion": "#### Q99. How would you correct this code block to make sure that the sent property is set to the Boolean value false?\n\n```javascript\nReactDom.render(\n  <Message sent=false />,\n  document.getElementById(\"root\")\n);\n```\n\n",
        "selection": [
            {
                "rawOption": " A"
            }
        ],
        "answers": [
            0
        ]
    },
    "99": {
        "rawQuestion": "#### Q100. This code is part of an app that collects Pokemon. The useState hook below is a piece of state holding onto the names of the Pokemon collected so far. How would you access the collected Pokemon in state?\n\n```javascript\nconst PokeDex = (props) => {\n  const [pokeDex, setPokeDex] = useState([]);\n  /// ...\n};\n```\n\n",
        "selection": [
            {
                "rawOption": " props.pokeDex\n"
            },
            {
                "rawOption": " this.props.pokeDex\n"
            },
            {
                "rawOption": " setPokeDex()\n"
            },
            {
                "rawOption": " pokeDex"
            }
        ],
        "answers": [
            3
        ]
    },
    "100": {
        "rawQuestion": "#### Q101. What would you pass to the onClick prop that wil allow you to pass the initName prop into the greet handler?\n\n```javascript\nconst Greeting = ({ initName }) => {\n  const greet = (name) => console.log(\"Hello, \" + name + \"!\");\n  return <button onClick={ ... }>Greeting Button </button>\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " hug\n"
            },
            {
                "rawOption": " this.hug(initName)\n"
            },
            {
                "rawOption": " (name) => this.hug(name)\n"
            },
            {
                "rawOption": " () => hug(initName)"
            }
        ],
        "answers": [
            3
        ]
    },
    "101": {
        "rawQuestion": "#### Q102. What is the name of the compiler used to transform JSX into JavaScript?\n\n",
        "selection": [
            {
                "rawOption": " Babel\n"
            },
            {
                "rawOption": " JSX Editor\n"
            },
            {
                "rawOption": " Browser Buddy\n"
            },
            {
                "rawOption": " ReactDOM"
            }
        ],
        "answers": [
            0
        ]
    },
    "102": {
        "rawQuestion": "#### Q103. Which hook is used to prevent a function from being recreated on every component render?\n\n",
        "selection": [
            {
                "rawOption": " useCallback\n"
            },
            {
                "rawOption": " useMemo\n"
            },
            {
                "rawOption": " useRef\n"
            },
            {
                "rawOption": " useTransition"
            }
        ],
        "answers": [
            0
        ]
    },
    "103": {
        "rawQuestion": "#### Q104. Why might you use the `useRef` hook?\n\n",
        "selection": [
            {
                "rawOption": " To bind the function\n"
            },
            {
                "rawOption": " To call a function\n"
            },
            {
                "rawOption": " To directly access a DOM\n"
            },
            {
                "rawOption": " To refer to another JS file"
            }
        ],
        "answers": [
            2
        ]
    },
    "104": {
        "rawQuestion": "#### Q105. Which of the following is required to use React?\n\n",
        "selection": [
            {
                "rawOption": " JavaScript\n"
            },
            {
                "rawOption": " React Router\n"
            },
            {
                "rawOption": " Redux\n"
            },
            {
                "rawOption": " Prop-Types"
            }
        ],
        "answers": [
            0
        ]
    },
    "105": {
        "rawQuestion": "#### Q106. What is the correct way to get a value from context?\n\n",
        "selection": [
            {
                "rawOption": " const value = useContext(MyContext.Consumer)\n"
            },
            {
                "rawOption": " const value = useContext(MyContext.Provider)\n"
            },
            {
                "rawOption": " const value = useContext(MyContext)\n"
            },
            {
                "rawOption": " const value = useContext({value: \"intiial value\"})"
            }
        ],
        "answers": [
            2
        ]
    },
    "106": {
        "rawQuestion": "#### Q107. Why is ref used?\n\n",
        "selection": [
            {
                "rawOption": " to bind function\n"
            },
            {
                "rawOption": " to call function\n"
            },
            {
                "rawOption": " to directly access DOM node\n"
            },
            {
                "rawOption": " to refer to another JS file"
            }
        ],
        "answers": [
            2
        ]
    },
    "107": {
        "rawQuestion": "#### Q108. Choose the method which should be overridden to stop the component from updating?\n\n",
        "selection": [
            {
                "rawOption": " componentDidMount\n"
            },
            {
                "rawOption": " componentDidUpdate\n"
            },
            {
                "rawOption": " willComponentUpdate\n"
            },
            {
                "rawOption": " shouldComponentUpdate"
            }
        ],
        "answers": [
            3
        ]
    },
    "108": {
        "rawQuestion": "#### Q109. What is the functionality of a “webpack” command?\n\n",
        "selection": [
            {
                "rawOption": " Runs react local development server\n"
            },
            {
                "rawOption": " Transfers all JS files to down into one file\n"
            },
            {
                "rawOption": " A module builder\n"
            },
            {
                "rawOption": " All of the above"
            }
        ],
        "answers": [
            3
        ]
    },
    "109": {
        "rawQuestion": "#### Q110. Choose the method which is not a part of ReactDOM?\n\n",
        "selection": [
            {
                "rawOption": " ReactDOM.createPortal()\n"
            },
            {
                "rawOption": " ReactDOM.hydrate()\n"
            },
            {
                "rawOption": " ReactDOM.destroy()\n"
            },
            {
                "rawOption": " ReactDOM.findDOMnode()"
            }
        ],
        "answers": [
            2
        ]
    },
    "110": {
        "rawQuestion": "#### Q111. In react, the key should be?\n\n",
        "selection": [
            {
                "rawOption": " Unique among his siblings\n"
            },
            {
                "rawOption": " Unique in DOM\n"
            },
            {
                "rawOption": " Does not requires to be unique\n"
            },
            {
                "rawOption": " all of the above"
            }
        ],
        "answers": [
            0
        ]
    },
    "111": {
        "rawQuestion": "#### Q112. Which company developed ReactJS?\n\n",
        "selection": [
            {
                "rawOption": " Google\n"
            },
            {
                "rawOption": " Meta (ex Facebook)\n"
            },
            {
                "rawOption": " Apple\n"
            },
            {
                "rawOption": " Twitter"
            }
        ],
        "answers": [
            1
        ]
    },
    "112": {
        "rawQuestion": "#### Q113. Choose the library which is most often associated with react?\n\n",
        "selection": [
            {
                "rawOption": " Chai\n"
            },
            {
                "rawOption": " Sinon\n"
            },
            {
                "rawOption": " Jest\n"
            },
            {
                "rawOption": " Mocha"
            }
        ],
        "answers": [
            2
        ]
    },
    "113": {
        "rawQuestion": "#### Q114. What of the following is used in React.js to increase performance?\n\n",
        "selection": [
            {
                "rawOption": " Original DOM\n"
            },
            {
                "rawOption": " Virtual DOM\n"
            },
            {
                "rawOption": " Both of the above\n"
            },
            {
                "rawOption": " None of the above"
            }
        ],
        "answers": [
            1
        ]
    },
    "114": {
        "rawQuestion": "#### Q115. Among The following options, choose the one which helps react for keeping their data uni-directional?\n\n",
        "selection": [
            {
                "rawOption": " DOM\n"
            },
            {
                "rawOption": " flux\n"
            },
            {
                "rawOption": " JSX\n"
            },
            {
                "rawOption": " Props"
            }
        ],
        "answers": [
            1
        ]
    },
    "115": {
        "rawQuestion": "#### Q116. Which choice is a correct refactor of the Greeting class component into a function component?\n\n```javascript\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello {this.props.name}!<h1>;\n  }\n}\n```\n\n",
        "selection": [
            {
                "rawOption": " `const Greeting = (name) => <h1>{name}</h1>`\n"
            },
            {
                "rawOption": " `function Greeting(name){return <h1>{name}</h1>;}`\n"
            },
            {
                "rawOption": " `const Greeting = props => { <h1>{props.name}</h1> }`\n"
            },
            {
                "rawOption": " `const Greeting = ({ name }) => <h1>Hello {name}</h1>;`"
            }
        ],
        "answers": [
            3
        ]
    },
    "116": {
        "rawQuestion": "#### Q117. Why is the `waitlist` not updating correctly?\n\n```javascript\nconst Waitlist = () => {\n  const [name, setName] = useState('');\n  const [waitlist, setWaitlist] = useState([]);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    waitlist.push(name);\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <label>\n          Name: <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n        </label>\n        <button type=\"submit\">Add to waitlist</button>\n      </form>\n\n      <ol>\n        {waitlist.map((name) => (\n          <li key={name}>{name}</li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n```\n\n",
        "selection": [
            {
                "rawOption": " `waitlist` is being mutated directly. Use the `setWaitlist` function instead to update the waitlist state.\n"
            },
            {
                "rawOption": " The form is reloading the page each time `Add to waitlist` is clicked.\n"
            },
            {
                "rawOption": " The `Add to waitlist` button is missing a click handler.\n"
            },
            {
                "rawOption": " There are likely repeated names inside of the `waitlist` array."
            }
        ],
        "answers": [
            0
        ]
    }
}